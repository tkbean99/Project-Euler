'''
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
'''

# General idea is to sum all multiples of 3 and all multiples of 5 below a number 'n', 
# then subtract the sum of all numbers that are multiples of 15 below 'n'

# The3List is a list of multiples of 3 below 'n'
# The5List is a list of multiples of 5 below 'n'
# The15List is a list of multiples of 15 below 'n'
#Let 'n' be 10

n=10
i=0
j=0
k=0

The3List=[i for i in range(1,n) if i%3==0]
The5List=[j for j in range(1,n) if j%5==0]
The15List=[k for k in range(1,n) if k%15==0]

# Now, we find the sum in each list

The3ListTotal = sum(The3List)
The5ListTotal = sum(The5List)
The15ListTotal = sum(The15List)

# Refer back to the general idea
FinalSolution = The3ListTotal + The5ListTotal - The15ListTotal
print(FinalSolution)

# Let's create a function, f(n), that can solve the sum of all multiples of 3 and multiples of 5 below n
def f(n):
    #create variables to assist in creating lists
    i=0
    j=0
    k=0
    #create the lists of multiples
    The3List=[i for i in range(1,n) if i%3==0]
    The5List=[j for j in range(1,n) if j%5==0]
    The15List=[k for k in range(1,n) if k%15==0]
    #find the sum of each list
    The3ListTotal = sum(The3List)
    The5ListTotal = sum(The5List)
    The15ListTotal = sum(The15List)
    #write the equation leading to the final solution
    FinalSolution = The3ListTotal + The5ListTotal - The15ListTotal
    return FinalSolution 
    
# Now to test the function when n=1000
f(1000)

# Now let's try with a larger number
f(2000)
